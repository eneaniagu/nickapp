{"version":3,"sources":["../src/GLViewDOM.js"],"names":["__DEV__","process","env","NODE_ENV","propTypes","onContextCreate","PropTypes","func","isRequired","onContextFailure","onContextLost","onContextRestored","webglContextAttributes","object","width","number","height","style","pixelRatio","version","string","ErrorDebug","Component","render","error","props","title","String","rawError","message","detail","longMessage","position","top","left","padding","background","color","fontSize","lineHeight","fontStyle","fontWeight","fontFamily","overflow","titleStyle","marginBottom","detailStyle","whiteSpace","GLViewDOM","e","preventDefault","gl","_createContext","ref","canvas","setState","state","componentDidMount","addEventListener","_onContextLost","_onContextRestored","Error","componentWillUnmount","removeEventListener","debug","rest","Number","window","devicePixelRatio","k","hasOwnProperty","display","onRef","preserveDrawingBuffer","captureAsDataURL","args","console","warn","toDataURL","captureAsBlob","Promise","resolve","then","reject","toBlob"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzC;AAEA;AACA;AACA;;;AAYA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,eAAe,EAAEC,mBAAUC,IAAV,CAAeC,UADhB;AAEhBC,EAAAA,gBAAgB,EAAEH,mBAAUC,IAAV,CAAeC,UAFjB;AAGhBE,EAAAA,aAAa,EAAEJ,mBAAUC,IAAV,CAAeC,UAHd;AAIhBG,EAAAA,iBAAiB,EAAEL,mBAAUC,IAAV,CAAeC,UAJlB;AAKhBI,EAAAA,sBAAsB,EAAEN,mBAAUO,MALlB;AAMhBC,EAAAA,KAAK,EAAER,mBAAUS,MAAV,CAAiBP,UANR;AAOhBQ,EAAAA,MAAM,EAAEV,mBAAUS,MAAV,CAAiBP,UAPT;AAQhBS,EAAAA,KAAK,EAAEX,mBAAUO,MARD;AAShBK,EAAAA,UAAU,EAAEZ,mBAAUS,MATN;AAUhBI,EAAAA,OAAO,EAAEb,mBAAUc;AAVH,CAAlB;;AAaA,MAAMC,UAAN,SAAyBC,gBAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACH,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACK,OAAxB,IAAmCL,KAApC,CAAlB;AACA,QAAIM,MAAM,GAAGH,MAAM,CAACH,KAAK,CAACO,WAAN,IAAqBP,KAAK,CAACI,QAA3B,IAAuC,EAAxC,CAAnB;AACA,UAAMX,KAAK,GAAG;AACZH,MAAAA,KAAK,EAAE,MADK;AAEZE,MAAAA,MAAM,EAAE,MAFI;AAGZgB,MAAAA,QAAQ,EAAE,UAHE;AAIZC,MAAAA,GAAG,EAAE,CAJO;AAKZC,MAAAA,IAAI,EAAE,CALM;AAMZC,MAAAA,OAAO,EAAE,KANG;AAOZC,MAAAA,UAAU,EAAE,MAPA;AAQZC,MAAAA,KAAK,EAAE,MARK;AASZC,MAAAA,QAAQ,EAAE,MATE;AAUZC,MAAAA,UAAU,EAAE,OAVA;AAWZC,MAAAA,SAAS,EAAE,QAXC;AAYZC,MAAAA,UAAU,EAAE,QAZA;AAaZC,MAAAA,UAAU,EAAE,WAbA;AAcZC,MAAAA,QAAQ,EAAE;AAdE,KAAd;AAgBA,UAAMC,UAAU,GAAG;AACjBH,MAAAA,UAAU,EAAE,MADK;AAEjBI,MAAAA,YAAY,EAAE;AAFG,KAAnB;AAIA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,UAAU,EAAE;AADM,KAApB;AAGA,wBACE;AAAK,MAAA,KAAK,EAAE9B;AAAZ,oBACE;AAAK,MAAA,KAAK,EAAE2B;AAAZ,OAAyBlB,KAAzB,CADF,eAEE;AAAK,MAAA,KAAK,EAAEoB;AAAZ,OAA0BhB,MAA1B,CAFF,CADF;AAMD;;AAlCgC;;AAqCpB,MAAMkB,SAAN,SAAwB1B,gBAAxB,CAiBb;AAAA;AAAA;;AAAA,mCACQ;AACNE,MAAAA,KAAK,EAAE;AADD,KADR;;AAAA;;AAAA;;AAAA;;AAAA,4CA8FkByB,CAAD,IAAc;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,EAAL,GAAU,IAAV;AACA,WAAK1B,KAAL,CAAWf,aAAX;AACD,KAlGD;;AAAA,gDAoGqB,MAAM;AACzB,WAAKyC,EAAL,GAAU,KAAKC,cAAL,EAAV;AACA,WAAK3B,KAAL,CAAWd,iBAAX,CAA6B,KAAKwC,EAAlC;AACD,KAvGD;;AAAA,mCAyGSE,GAAD,IAA4B;AAClC,WAAKC,MAAL,GAAcD,GAAd;AACD,KA3GD;;AAAA,wCA6Ga,CAACrD,OAAD,GACT,IADS,GAERwB,KAAD,IAAkB;AAChB,WAAK+B,QAAL,CAAc;AAAE/B,QAAAA;AAAF,OAAd;AACD,KAjHL;;AAAA,uCAmHY,CAACxB,OAAD,GACR,IADQ,GAER,MAAM;AACJ,UAAI,KAAKwD,KAAL,CAAWhC,KAAf,EAAsB;AACpB,aAAK+B,QAAL,CAAc;AAAE/B,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,KAzHL;AAAA;;AASAiC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEpD,MAAAA,eAAF;AAAmBI,MAAAA;AAAnB,QAAwC,KAAKgB,KAAnD;;AACA,UAAM0B,EAA0B,GAAG,KAAKC,cAAL,EAAnC;;AACA,QAAID,EAAJ,EAAQ;AACN,WAAKA,EAAL,GAAUA,EAAV;AACA9C,MAAAA,eAAe,CAAC8C,EAAD,CAAf;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAa,IAAnB;AACA,8BAAUA,MAAV,EAAkB,sDAAlB;AACAA,MAAAA,MAAM,CAACI,gBAAP,CAAwB,kBAAxB,EAA4C,KAAKC,cAAjD;AACAL,MAAAA,MAAM,CAACI,gBAAP,CAAwB,sBAAxB,EAAgD,KAAKE,kBAArD;AACD,KAPD,MAOO;AACLnD,MAAAA,gBAAgB,CAAC,IAAIoD,KAAJ,CAAU,kBAAV,CAAD,CAAhB;AACD;AACF;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKX,EAAT,EAAa;AACX,2BAAO,KAAKA,EAAZ;AACA,WAAKA,EAAL,GAAU,IAAV;AACD;;AACD,UAAM;AAAEG,MAAAA;AAAF,QAAa,IAAnB;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACS,mBAAP,CAA2B,kBAA3B,EAA+C,KAAKJ,cAApD;AACAL,MAAAA,MAAM,CAACS,mBAAP,CACE,sBADF,EAEE,KAAKH,kBAFP;AAID;AACF;;AAEDrC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKgC,KAAvB;;AACA,sBAQI,KAAK/B,KART;AAAA,QAAI;AACFX,MAAAA,KADE;AAEFE,MAAAA,MAFE;AAGFE,MAAAA,UAHE;AAIFD,MAAAA,KAJE;AAKF+C,MAAAA,KALE;AAMF7C,MAAAA;AANE,KAAJ;AAAA,QAOK8C,IAPL;;AASA,QAAI,CAAC/C,UAAL,EACEA,UAAU,GAAGgD,MAAM,CAChB,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,gBAAtC,IAA2D,CAD1C,CAAnB;;AAGF,SAAK,IAAIC,CAAT,IAAcjE,SAAd,EAAyB;AACvB,UAAI6D,IAAI,CAACK,cAAL,CAAoBD,CAApB,CAAJ,EAA4B;AAC1B,eAAOJ,IAAI,CAACI,CAAD,CAAX;AACD;AACF;;AACD,wBACE;AACE,MAAA,KAAK;AACHrC,QAAAA,QAAQ,EAAE;AADP,SAEAf,KAFA;AAGHsD,QAAAA,OAAO,EAAE,cAHN;AAIHzD,QAAAA,KAJG;AAKHE,QAAAA;AALG;AADP,oBASE;AACE,MAAA,GAAG,EAAE,KAAKwD,KADZ;AAEE,MAAA,KAAK,EAAE;AAAE1D,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAFT;AAGE,MAAA,KAAK,EAAEF,KAAK,GAAGI,UAHjB;AAIE,MAAA,MAAM,EAAEF,MAAM,GAAGE;AAJnB,OAKM+C,IALN,EATF,EAgBGzC,KAAK,gBAAG,6BAAC,UAAD;AAAY,MAAA,KAAK,EAAEA;AAAnB,MAAH,GAAkC,IAhB1C,CADF;AAoBD;;AAED4B,EAAAA,cAAc,GAAG;AACf,UAAM;AAAExC,MAAAA,sBAAF;AAA0BoD,MAAAA,KAA1B;AAAiC7C,MAAAA;AAAjC,QAA6C,KAAKM,KAAxD;AACA,UAAM0B,EAA0B,GAAG,yBACjC,KAAKG,MAD4B,EAEjCU,KAAK,mCACIpD,sBADJ;AAC4B6D,MAAAA,qBAAqB,EAAE;AADnD,SAED7D,sBAJ6B,EAKjCO,OAAO,IAAI,MALsB,CAAnC;AAOA,SAAKP,sBAAL,GAA8BA,sBAAsB,IAAI,EAAxD;AACA,WAAOuC,EAAP;AACD;;AA+BDuB,EAAAA,gBAAgB,CAAC,GAAGC,IAAJ,EAAuB;AACrC,QAAI,CAAC,KAAK/D,sBAAL,CAA4B6D,qBAAjC,EAAwD;AACtDG,MAAAA,OAAO,CAACC,IAAR,CACE,6HADF;AAGD;;AACD,4BAAU,KAAKvB,MAAf,EAAuB,+BAAvB;AACA,WAAO,KAAKA,MAAL,CAAYwB,SAAZ,CAAsB,GAAGH,IAAzB,CAAP;AACD;;AAEDI,EAAAA,aAAa,CAAC,GAAGJ,IAAJ,EAA8B;AACzC,QAAI,CAAC,KAAK/D,sBAAL,CAA4B6D,qBAAjC,EAAwD;AACtDG,MAAAA,OAAO,CAACC,IAAR,CACE,0HADF;AAGD;;AACD,WAAOG,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CACL,MACE,IAAIF,OAAJ,CAAY,CAACC,OAAD,EAAUE,MAAV,KACV,KAAK7B,MAAL,GACI,KAAKA,MAAL,CAAY8B,MAAZ,CAAmBH,OAAnB,EAA4B,GAAGN,IAA/B,CADJ,GAEIQ,MAAM,CAAC,IAAItB,KAAJ,CAAU,+BAAV,CAAD,CAHZ,CAFG,CAAP;AAQD;;AAnJD;;;;gBAjBmBb,S,eAqBA5C,S","sourcesContent":["//@flow\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport getContext from \"./getContext\";\nimport loseGL from \"./loseGL\";\n\nconst __DEV__ = process.env.NODE_ENV === \"development\";\n\n/**\n * WebGL context initial options.\n */\ntype WebGLContextAttributes = {\n  alpha?: boolean,\n  depth?: boolean,\n  stencil?: boolean,\n  antialias?: boolean,\n  premultipliedAlpha?: boolean,\n  preserveDrawingBuffer?: boolean,\n  preferLowPowerToHighPerformance?: boolean,\n  failIfMajorPerformanceCaveat?: boolean,\n};\n\nconst propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextFailure: PropTypes.func.isRequired,\n  onContextLost: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func.isRequired,\n  webglContextAttributes: PropTypes.object,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  pixelRatio: PropTypes.number,\n  version: PropTypes.string,\n};\n\nclass ErrorDebug extends Component {\n  render() {\n    const { error } = this.props;\n    let title = String(error.rawError || error.message || error);\n    let detail = String(error.longMessage || error.rawError || \"\");\n    const style = {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      padding: \"1em\",\n      background: \"#a00\",\n      color: \"#fff\",\n      fontSize: \"12px\",\n      lineHeight: \"1.2em\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontFamily: \"monospace\",\n      overflow: \"auto\",\n    };\n    const titleStyle = {\n      fontWeight: \"bold\",\n      marginBottom: \"1em\",\n    };\n    const detailStyle = {\n      whiteSpace: \"pre\",\n    };\n    return (\n      <div style={style}>\n        <div style={titleStyle}>{title}</div>\n        <div style={detailStyle}>{detail}</div>\n      </div>\n    );\n  }\n}\n\nexport default class GLViewDOM extends Component<\n  {\n    onContextCreate: (gl: WebGLRenderingContext) => void,\n    onContextFailure: (e: Error) => void,\n    onContextLost: () => void,\n    onContextRestored: (gl: ?WebGLRenderingContext) => void,\n    webglContextAttributes?: WebGLContextAttributes,\n    pixelRatio?: number,\n    width: number,\n    height: number,\n    style?: any,\n    debug?: number,\n    version?: string,\n  },\n  {\n    error: ?Error,\n  }\n> {\n  state = {\n    error: null,\n  };\n  static propTypes = propTypes;\n  webglContextAttributes: WebGLContextAttributes;\n  canvas: ?HTMLCanvasElement;\n  gl: ?WebGLRenderingContext;\n\n  componentDidMount() {\n    const { onContextCreate, onContextFailure } = this.props;\n    const gl: ?WebGLRenderingContext = this._createContext();\n    if (gl) {\n      this.gl = gl;\n      onContextCreate(gl);\n      const { canvas } = this;\n      invariant(canvas, \"canvas is not settled in GLViewDOM#componentDidMount\");\n      canvas.addEventListener(\"webglcontextlost\", this._onContextLost);\n      canvas.addEventListener(\"webglcontextrestored\", this._onContextRestored);\n    } else {\n      onContextFailure(new Error(\"no-webgl-context\"));\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.gl) {\n      loseGL(this.gl);\n      this.gl = null;\n    }\n    const { canvas } = this;\n    if (canvas) {\n      canvas.removeEventListener(\"webglcontextlost\", this._onContextLost);\n      canvas.removeEventListener(\n        \"webglcontextrestored\",\n        this._onContextRestored\n      );\n    }\n  }\n\n  render() {\n    const { error } = this.state;\n    let {\n      width,\n      height,\n      pixelRatio,\n      style,\n      debug,\n      version,\n      ...rest\n    } = this.props;\n    if (!pixelRatio)\n      pixelRatio = Number(\n        (typeof window === \"object\" && window.devicePixelRatio) || 1\n      );\n    for (let k in propTypes) {\n      if (rest.hasOwnProperty(k)) {\n        delete rest[k];\n      }\n    }\n    return (\n      <span\n        style={{\n          position: \"relative\",\n          ...style,\n          display: \"inline-block\",\n          width,\n          height,\n        }}\n      >\n        <canvas\n          ref={this.onRef}\n          style={{ width, height }}\n          width={width * pixelRatio}\n          height={height * pixelRatio}\n          {...rest}\n        />\n        {error ? <ErrorDebug error={error} /> : null}\n      </span>\n    );\n  }\n\n  _createContext() {\n    const { webglContextAttributes, debug, version } = this.props;\n    const gl: ?WebGLRenderingContext = getContext(\n      this.canvas,\n      debug\n        ? { ...webglContextAttributes, preserveDrawingBuffer: true }\n        : webglContextAttributes,\n      version || \"auto\"\n    );\n    this.webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n\n  _onContextLost = (e: Event) => {\n    e.preventDefault();\n    this.gl = null;\n    this.props.onContextLost();\n  };\n\n  _onContextRestored = () => {\n    this.gl = this._createContext();\n    this.props.onContextRestored(this.gl);\n  };\n\n  onRef = (ref: HTMLCanvasElement) => {\n    this.canvas = ref;\n  };\n\n  debugError = !__DEV__\n    ? null\n    : (error: Error) => {\n        this.setState({ error });\n      };\n\n  afterDraw = !__DEV__\n    ? null\n    : () => {\n        if (this.state.error) {\n          this.setState({ error: null });\n        }\n      };\n\n  captureAsDataURL(...args: any): string {\n    if (!this.webglContextAttributes.preserveDrawingBuffer) {\n      console.warn(\n        \"Surface#captureAsDataURL is likely to not work if you don't define webglContextAttributes={{ preserveDrawingBuffer: true }}\"\n      );\n    }\n    invariant(this.canvas, \"canvas is no longer available\");\n    return this.canvas.toDataURL(...args);\n  }\n\n  captureAsBlob(...args: any): Promise<Blob> {\n    if (!this.webglContextAttributes.preserveDrawingBuffer) {\n      console.warn(\n        \"Surface#captureAsBlob is likely to not work if you don't define webglContextAttributes={{ preserveDrawingBuffer: true }}\"\n      );\n    }\n    return Promise.resolve().then(\n      () =>\n        new Promise((resolve, reject) =>\n          this.canvas\n            ? this.canvas.toBlob(resolve, ...args)\n            : reject(new Error(\"canvas is no longer available\"))\n        )\n    );\n  }\n}\n"],"file":"GLViewDOM.js"}