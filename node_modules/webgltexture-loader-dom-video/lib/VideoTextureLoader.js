"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _webgltextureLoader = require("webgltexture-loader");

class VideoTextureLoader extends _webgltextureLoader.WebGLTextureLoaderAsyncHashCache {
  canLoad(input) {
    return input instanceof HTMLVideoElement;
  }

  inputHash(input) {
    return input;
  }

  loadNoCache(input) {
    const {
      gl
    } = this;
    const {
      width,
      height
    } = input;
    let timeout;

    const dispose = () => {
      clearTimeout(timeout);
    };

    const promise = new Promise((resolve, reject) => {
      const checkVideoReady = () => {
        if (input.videoWidth > 0) {
          const texture = gl.createTexture();
          const {
            videoWidth: width,
            videoHeight: height
          } = input;
          gl.bindTexture(gl.TEXTURE_2D, texture);
          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);
          resolve({
            texture,
            width,
            height
          });
        } else {
          timeout = setTimeout(checkVideoReady, 100);
        }
      };

      checkVideoReady();
    });
    return {
      dispose,
      promise
    };
  }

  update(input) {
    const {
      gl
    } = this;
    const res = this.get(input);
    if (!res) return;
    gl.bindTexture(gl.TEXTURE_2D, res.texture);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);
  }

}

_webgltextureLoader.globalRegistry.add(VideoTextureLoader);

var _default = VideoTextureLoader;
exports.default = _default;
//# sourceMappingURL=VideoTextureLoader.js.map