{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as type from '../actionTypes';\nvar initialState = {\n  product: [],\n  accepted: false\n};\n\nvar AddProduct = function AddProduct() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case type.ADD_PRODUCT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        accepted: true,\n        product: action.payload\n      });\n      return state;\n  }\n};\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["/home/ab/Documents/laravel-nextjs-starter-main/client/store/Tanent/reducer.js"],"names":["type","initialState","product","accepted","AddProduct","state","action","ADD_PRODUCT","payload"],"mappings":";;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,gBAAtB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKC,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAClD,UAAOA,MAAM,CAACN,IAAd;AACI,SAAKA,IAAI,CAACO,WAAV;AACI,6CACOF,KADP;AAEIF,QAAAA,QAAQ,EAAE,IAFd;AAGID,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAHpB;AAMJ,aAAOH,KAAP;AARJ;AAWH,CAZA;;KAAMD,U;AAgBP,eAAeA,UAAf","sourcesContent":["import * as type from '../actionTypes'\n\n\nconst initialState = {\n    product: [],\n    accepted: false,\n}\n\n const AddProduct = (state = initialState, action) => {\n    switch(action.type){\n        case type.ADD_PRODUCT:\n            return {\n                ...state,\n                accepted: true,\n                product: action.payload,\n            }\n         \n        return state\n\n    }\n}\n\n\n\nexport default AddProduct"]},"metadata":{},"sourceType":"module"}