{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ab/Documents/laravel-nextjs-starter-main/client/pages/user/password/forgot.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Card } from \"@/components/Card/Card\";\nimport { TextInput } from \"@/components/Form/FormElement\";\nimport { H1 } from \"@/components/Typography/Headers\";\nimport { PrimaryButton } from \"@/components/Button/Button\";\nimport { connect } from \"react-redux\";\nimport { forgotPassword } from \"@/store/auth/authActions\";\nimport { Alert } from \"@/components/Alert/Alert\";\n\nfunction ForgotPassword(props) {\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    email: \"\",\n    emailError: \"\",\n    notificationAlert: {\n      type: \"\",\n      msg: \"\"\n    }\n  });\n\n  const handleInputChange = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.currentTarget.name]: e.currentTarget.value,\n      emailError: \"\"\n    }));\n  };\n  /**\n   * The submit action.\n   */\n\n\n  const submit = async () => {\n    const res = await props.forgotPassword(formData.email);\n\n    if (res.error) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        notificationAlert: {\n          type: \"danger\",\n          msg: res.error\n        }\n      }));\n    } else if (res.success) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        notificationAlert: {\n          type: \"success\",\n          msg: res.success\n        }\n      }));\n    }\n  }; // Returns statement.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute w-full md:w-3/5 lg:w-1/3 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        additionalInnerClasses: \"justify-center items-center\",\n        additionalWrapperClasses: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [formData.notificationAlert.type && /*#__PURE__*/_jsxDEV(Alert, {\n            type: formData.notificationAlert.type,\n            children: formData.notificationAlert.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(H1, {\n            withMargin: true,\n            center: true,\n            children: \"Forgot your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter your email and we will send you a link to reset your password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            type: \"text\",\n            value: formData.email,\n            placeholder: \"Your email address...\",\n            onChange: e => {\n              handleInputChange(e);\n            },\n            name: \"email\",\n            errorMsg: formData.emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n            onClick: () => {\n              submit();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\nexport default connect(null, {\n  forgotPassword\n})(ForgotPassword);","map":{"version":3,"sources":["/home/ab/Documents/laravel-nextjs-starter-main/client/pages/user/password/forgot.tsx"],"names":["React","useState","Card","TextInput","H1","PrimaryButton","connect","forgotPassword","Alert","ForgotPassword","props","formData","setFormData","email","emailError","notificationAlert","type","msg","handleInputChange","e","currentTarget","name","value","submit","res","error","success"],"mappings":"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","sourcesContent":["import React, {ReactElement, useState} from \"react\";\nimport {Card} from \"@/components/Card/Card\";\nimport {TextInput} from \"@/components/Form/FormElement\";\nimport {H1} from \"@/components/Typography/Headers\";\nimport {PrimaryButton} from \"@/components/Button/Button\";\nimport {connect} from \"react-redux\";\nimport {forgotPassword} from \"@/store/auth/authActions\";\nimport {Alert} from \"@/components/Alert/Alert\";\n\nfunction ForgotPassword(props: any): ReactElement {\n    const [formData, setFormData] = useState<{\n        email: string;\n        emailError: string;\n        notificationAlert: {\n            type: string;\n            msg: string;\n        };\n    }>({\n        email: \"\",\n        emailError: \"\",\n        notificationAlert: {\n            type: \"\",\n            msg: \"\",\n        },\n    });\n\n    const handleInputChange = (e: React.FormEvent<HTMLInputElement>): void => {\n        setFormData({\n            ...formData,\n            [e.currentTarget.name]: e.currentTarget.value,\n            emailError: \"\",\n        });\n    };\n\n    /**\n     * The submit action.\n     */\n    const submit = async (): Promise<void> => {\n\n        const res: any = await props.forgotPassword(formData.email);\n        if (res.error) {\n            setFormData({\n                ...formData,\n                notificationAlert: {\n                    type: \"danger\",\n                    msg: res.error,\n                },\n            });\n        } else if (res.success) {\n            setFormData({\n                ...formData,\n                notificationAlert: {\n                    type: \"success\",\n                    msg: res.success,\n                },\n            });\n        }\n    };\n\n    // Returns statement.\n    return (\n        <div className=\"w-screen h-screen relative\">\n            <div\n                className=\"absolute w-full md:w-3/5 lg:w-1/3 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n                <Card\n                    additionalInnerClasses=\"justify-center items-center\"\n                    additionalWrapperClasses=\"bg-gray-100\"\n                >\n                    <>\n                        {/* Alert message. */}\n                        {formData.notificationAlert.type && (\n                            <Alert type={formData.notificationAlert.type}>\n                                {formData.notificationAlert.msg}\n                            </Alert>\n                        )}\n                        <H1 withMargin={true} center={true}>\n                            Forgot your password?\n                        </H1>\n                        <p>\n                            Enter your email and we will send you a link to\n                            reset your password.\n                        </p>\n                        {/* Email */}\n                        <TextInput\n                            type=\"text\"\n                            value={formData.email}\n                            placeholder=\"Your email address...\"\n                            onChange={(e) => {\n                                handleInputChange(e);\n                            }}\n                            name=\"email\"\n                            errorMsg={formData.emailError}\n                        />\n\n                        {/* Submit Button */}\n                        <PrimaryButton\n                            onClick={() => {\n                                submit();\n                            }}\n                        >\n                            Submit\n                        </PrimaryButton>\n                    </>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default connect(null, {forgotPassword})(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}