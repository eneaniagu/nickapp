{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as type from '../actionTypes';\nvar initItem = {\n  product: {},\n  accepted: ''\n};\n\nvar AddProduct = function AddProduct() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initItem;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case type.ADD_PRODUCT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n  }\n};\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["/home/ab/Documents/laravel-nextjs-starter-main/client/store/Tanent/reducer.tsx"],"names":["type","initItem","product","accepted","AddProduct","state","action","ADD_PRODUCT","loading"],"mappings":";;;;;;AAGA,OAAO,KAAKA,IAAZ,MAAsB,gBAAtB;AAGA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,OAAO,EAAE,EADI;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAjB;;AAKC,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAA6D;AAAA,MAA5DC,KAA4D,uEAApDJ,QAAoD;AAAA,MAA1CK,MAA0C;;AAC7E,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKA,IAAI,CAACO,WAAV;AACI,6CACOF,KADP;AAEIG,QAAAA,OAAO,EAAE;AAFb;AAFR;AAQH,CATA;;KAAMJ,U;AAaP,eAAeA,UAAf","sourcesContent":["\n\nimport axios from 'axios'\nimport * as type from '../actionTypes'\n\n\nconst initItem = {\n    product: {},\n    accepted: '',\n}\n\n const AddProduct = (state = initItem, action: {type: string; payload: any} ) => {\n    switch (action.type) {\n        case type.ADD_PRODUCT:\n            return {\n                ...state,\n                loading: false,\n\n            }\n    }\n}\n\n\n\nexport default AddProduct"]},"metadata":{},"sourceType":"module"}