{"ast":null,"code":"var _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\n\nvar _jsxFileName = \"/var/www/html/blog/pages/gl.js\";\n\nconst React = require(\"react-native\");\n\nconst GL = require(\"gl-react\");\n\nconst {\n  Surface\n} = require(\"gl-react-native\");\n\nconst shaders = GL.Shaders.create({\n  oneFingerResponse: {\n    frag: `\nprecision mediump float;\nvarying vec2 uv;\n\nuniform float pressed;\nuniform vec2 position;\n\nvoid main () {\n  float dist = pow(1.0 - distance(position, uv), 4.0);\n  float edgeDistX = pow(1.0 - distance(position.x, uv.x), 24.0);\n  float edgeDistY = pow(1.0 - distance(position.y, uv.y), 24.0);\n  gl_FragColor = pressed * vec4(0.8 * dist + edgeDistX, 0.7 * dist + edgeDistY, 0.6 * dist, 1.0);\n}\n    `\n  }\n});\n\nclass OneFingerResponse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: 0,\n      position: [0, 0]\n    };\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n  }\n\n  onTouchStart(evt) {\n    this.setState({\n      pressed: 1\n    });\n    this.onTouchMove(evt);\n  }\n\n  onTouchMove(evt) {\n    const {\n      width,\n      height\n    } = this.props;\n    const {\n      locationX,\n      locationY\n    } = evt.nativeEvent;\n    this.setState({\n      position: [Math.max(0, Math.min(locationX / width, 1)), Math.max(0, Math.min(1 - locationY / height, 1))]\n    });\n  }\n\n  onTouchEnd() {\n    this.setState({\n      pressed: 0\n    });\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n    const {\n      pressed,\n      position\n    } = this.state;\n    return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(Surface, {\n      onStartShouldSetResponderCapture: () => true,\n      onMoveShouldSetResponderCapture: () => true,\n      onResponderTerminationRequest: () => false,\n      onResponderGrant: this.onTouchStart,\n      onResponderMove: this.onTouchMove,\n      onResponderRelease: this.onTouchEnd,\n      onResponderTerminate: this.onTouchEnd,\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(GL.Node, {\n        shader: shaders.oneFingerResponse,\n        uniforms: {\n          pressed,\n          position\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/blog/pages/gl.js"],"names":["React","require","GL","Surface","shaders","Shaders","create","oneFingerResponse","frag","OneFingerResponse","Component","constructor","props","state","pressed","position","onTouchStart","bind","onTouchEnd","onTouchMove","evt","setState","width","height","locationX","locationY","nativeEvent","Math","max","min","render"],"mappings":"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","sourcesContent":["const React = require(\"react-native\");\nconst GL = require(\"gl-react\");\nconst { Surface } = require(\"gl-react-native\");\n\nconst shaders = GL.Shaders.create({\n    oneFingerResponse: {\n        frag: `\nprecision mediump float;\nvarying vec2 uv;\n\nuniform float pressed;\nuniform vec2 position;\n\nvoid main () {\n  float dist = pow(1.0 - distance(position, uv), 4.0);\n  float edgeDistX = pow(1.0 - distance(position.x, uv.x), 24.0);\n  float edgeDistY = pow(1.0 - distance(position.y, uv.y), 24.0);\n  gl_FragColor = pressed * vec4(0.8 * dist + edgeDistX, 0.7 * dist + edgeDistY, 0.6 * dist, 1.0);\n}\n    `\n    }\n});\n\nclass OneFingerResponse extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pressed: 0,\n            position: [0, 0]\n        };\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onTouchEnd = this.onTouchEnd.bind(this);\n        this.onTouchMove = this.onTouchMove.bind(this);\n    }\n    onTouchStart(evt) {\n        this.setState({\n            pressed: 1\n        });\n        this.onTouchMove(evt);\n    }\n    onTouchMove(evt) {\n        const { width, height } = this.props;\n        const { locationX, locationY } = evt.nativeEvent;\n        this.setState({\n            position: [\n                Math.max(0, Math.min(locationX / width, 1)),\n                Math.max(0, Math.min(1 - locationY / height, 1))\n            ]\n        });\n    }\n    onTouchEnd() {\n        this.setState({\n            pressed: 0\n        });\n    }\n    render() {\n        const { width, height } = this.props;\n        const { pressed, position } = this.state;\n        return <Surface\n            onStartShouldSetResponderCapture={() => true}\n            onMoveShouldSetResponderCapture={() => true}\n            onResponderTerminationRequest={() => false}\n            onResponderGrant={this.onTouchStart}\n            onResponderMove={this.onTouchMove}\n            onResponderRelease={this.onTouchEnd}\n            onResponderTerminate={this.onTouchEnd}\n            width={width}\n            height={height}>\n            <GL.Node\n                shader={shaders.oneFingerResponse}\n                uniforms={{ pressed, position }}\n            />\n        </Surface>;\n    }\n}"]},"metadata":{},"sourceType":"script"}