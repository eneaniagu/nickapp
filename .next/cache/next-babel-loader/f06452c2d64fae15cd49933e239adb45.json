{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ab/Documents/laravel-nextjs-starter-main/client/components/Form/FormElement.tsx\";\n\n/*\n|--------------------------------------------------------------------------\n| Form Element components.\n|--------------------------------------------------------------------------\n|\n| A collection of form elements ready to plug in to other compents.\n| They all have error messages ready to be displayed.\n|\n*/\nimport PropTypes from \"prop-types\";\n\n/**\n * Text input field.\n *\n * @param {object} props\n *   The props object.\n */\nexport function TextInput(props) {\n  var inputClasses = \"w-full px-1 py-2 rounded bg-white focus:outline-none focus:ring-2 focus:ring-purple-600 border \".concat(props.errorMsg ? \"border-red-500\" : \"border-transparent\", \" shadow-md focus:border-transparent\"); // Return statement.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-input w-full mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: props.type || \"text\",\n      value: props.value,\n      onChange: props.onChange,\n      name: props.name,\n      placeholder: props.placeholder || \"\",\n      className: inputClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), props.errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: props.errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = TextInput;\nTextInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.any.isRequired,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  errorMsg: PropTypes.string\n};\n/**\n * Textarea input field.\n *\n * @param {object} props\n *   The props object.\n */\n\nexport function TextArea(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: props.name,\n      rows: 3,\n      placeholder: props.placeholder,\n      onChange: props.onChange,\n      cols: 50,\n      className: \"w-full p-1 rounded bg-white focus:outline-none focus:ring-2 focus:ring-purple-600 border border-transparent focus:border-transparent \".concat(props.errorMsg ? \"border-red-500\" : \"border-transparent\", \" \"),\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), props.errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: props.errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c2 = TextArea;\nTextArea.propTypes = {\n  value: PropTypes.any.isRequired,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  errorMsg: PropTypes.string\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"TextArea\");","map":{"version":3,"sources":["/home/ab/Documents/laravel-nextjs-starter-main/client/components/Form/FormElement.tsx"],"names":["PropTypes","TextInput","props","inputClasses","errorMsg","type","value","onChange","name","placeholder","propTypes","string","any","isRequired","func","TextArea"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA6C;AAEhD,MAAMC,YAAoB,4GACtBD,KAAK,CAACE,QAAN,GAAiB,gBAAjB,GAAoC,oBADd,wCAA1B,CAFgD,CAMhD;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAEF,KAAK,CAACG,IAAN,IAAc,MADxB;AAEI,MAAA,KAAK,EAAEH,KAAK,CAACI,KAFjB;AAGI,MAAA,QAAQ,EAAEJ,KAAK,CAACK,QAHpB;AAII,MAAA,IAAI,EAAEL,KAAK,CAACM,IAJhB;AAKI,MAAA,WAAW,EAAEN,KAAK,CAACO,WAAN,IAAqB,EALtC;AAMI,MAAA,SAAS,EAAEN;AANf;AAAA;AAAA;AAAA;AAAA,YADJ,EAUKD,KAAK,CAACE,QAAN,iBACG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BF,KAAK,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KAvBeH,S;AAwBhBA,SAAS,CAACS,SAAV,GAAsB;AAClBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MADE;AAElBL,EAAAA,KAAK,EAAEN,SAAS,CAACY,GAAV,CAAcC,UAFH;AAGlBL,EAAAA,IAAI,EAAER,SAAS,CAACW,MAHE;AAIlBJ,EAAAA,QAAQ,EAAEP,SAAS,CAACc,IAAV,CAAeD,UAJP;AAKlBJ,EAAAA,WAAW,EAAET,SAAS,CAACW,MALL;AAMlBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACW;AANF,CAAtB;AASA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,QAAT,CAAkBb,KAAlB,EAA4C;AAC/C,sBACI;AAAA,4BACI;AACI,MAAA,IAAI,EAAEA,KAAK,CAACM,IADhB;AAEI,MAAA,IAAI,EAAE,CAFV;AAGI,MAAA,WAAW,EAAEN,KAAK,CAACO,WAHvB;AAII,MAAA,QAAQ,EAAEP,KAAK,CAACK,QAJpB;AAKI,MAAA,IAAI,EAAE,EALV;AAMI,MAAA,SAAS,iJACLL,KAAK,CAACE,QAAN,GAAiB,gBAAjB,GAAoC,oBAD/B,MANb;AAAA,gBAUKF,KAAK,CAACI;AAVX;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKJ,KAAK,CAACE,QAAN,iBACG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BF,KAAK,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,YAdR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;MApBeW,Q;AAqBhBA,QAAQ,CAACL,SAAT,GAAqB;AACjBJ,EAAAA,KAAK,EAAEN,SAAS,CAACY,GAAV,CAAcC,UADJ;AAEjBL,EAAAA,IAAI,EAAER,SAAS,CAACW,MAFC;AAGjBJ,EAAAA,QAAQ,EAAEP,SAAS,CAACc,IAAV,CAAeD,UAHR;AAIjBJ,EAAAA,WAAW,EAAET,SAAS,CAACW,MAJN;AAKjBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACW;AALH,CAArB","sourcesContent":["/*\n|--------------------------------------------------------------------------\n| Form Element components.\n|--------------------------------------------------------------------------\n|\n| A collection of form elements ready to plug in to other compents.\n| They all have error messages ready to be displayed.\n|\n*/\nimport PropTypes from \"prop-types\";\nimport {ReactElement} from \"react\";\n\n/**\n * Text input field.\n *\n * @param {object} props\n *   The props object.\n */\nexport function TextInput(props: any): ReactElement {\n\n    const inputClasses: string = `w-full px-1 py-2 rounded bg-white focus:outline-none focus:ring-2 focus:ring-purple-600 border ${\n        props.errorMsg ? \"border-red-500\" : \"border-transparent\"\n    } shadow-md focus:border-transparent`;\n\n    // Return statement.\n    return (\n        <div className=\"text-input w-full mb-2\">\n            <input\n                type={props.type || \"text\"}\n                value={props.value}\n                onChange={props.onChange}\n                name={props.name}\n                placeholder={props.placeholder || \"\"}\n                className={inputClasses}\n            />\n            {/* Shor error message if given. */}\n            {props.errorMsg && (\n                <div className=\"text-red-500\">{props.errorMsg}</div>\n            )}\n        </div>\n    );\n}\nTextInput.propTypes = {\n    type: PropTypes.string,\n    value: PropTypes.any.isRequired,\n    name: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    errorMsg: PropTypes.string,\n};\n\n/**\n * Textarea input field.\n *\n * @param {object} props\n *   The props object.\n */\nexport function TextArea(props: any): ReactElement {\n    return (\n        <div>\n            <textarea\n                name={props.name}\n                rows={3}\n                placeholder={props.placeholder}\n                onChange={props.onChange}\n                cols={50}\n                className={`w-full p-1 rounded bg-white focus:outline-none focus:ring-2 focus:ring-purple-600 border border-transparent focus:border-transparent ${\n                    props.errorMsg ? \"border-red-500\" : \"border-transparent\"\n                } `}\n            >\n                {props.value}\n            </textarea>\n            {props.errorMsg && (\n                <div className=\"text-red-500\">{props.errorMsg}</div>\n            )}\n        </div>\n    );\n}\nTextArea.propTypes = {\n    value: PropTypes.any.isRequired,\n    name: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    errorMsg: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}