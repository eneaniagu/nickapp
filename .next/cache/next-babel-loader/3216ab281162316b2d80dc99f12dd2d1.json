{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/blog/pages/gl.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nimport { Surface } from \"gl-react-dom\";\nimport Animated from \"animated\";\nconst shaders = Shaders.create({\n  cursor: {\n    frag: GLSL`\nprecision lowp float; varying vec2 uv; uniform vec2 style;\nvoid main() {\n  float dist = pow(1.0 - distance(style, uv), 8.0);\n  gl_FragColor = vec4(smoothstep(2.0, 0.2, distance(style, uv)) * vec3(\n    1.0 * dist + pow(1.0 - distance(style.y, uv.y), 16.0),\n    0.5 * dist + pow(1.0 - distance(style.y, uv.y), 32.0),\n    0.2 * dist + pow(1.0 - distance(style.x, uv.x), 32.0)), 1.0);\n}\n`\n  }\n});\n\nclass Cursor extends Component {\n  render() {\n    const {\n      style: {\n        x,\n        y\n      }\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Node, {\n      shader: shaders.cursor,\n      uniforms: {\n        style: [x, y]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n} // using \"style\" is a hack. see https://github.com/animatedjs/animated/issues/45\n\n\nconst AnimatedCursor = Animated.createAnimatedComponent(Cursor);\nexport default class Example extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      style: new Animated.ValueXY({\n        x: 0.5,\n        y: 0.5\n      })\n    });\n\n    _defineProperty(this, \"onMouseMove\", e => {\n      const rect = e.target.getBoundingClientRect();\n      Animated.spring(this.state.style, {\n        toValue: {\n          x: (e.clientX - rect.left) / rect.width,\n          y: (rect.bottom - e.clientY) / rect.height\n        }\n      }).start();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Surface, {\n      width: 500,\n      height: 500,\n      onMouseMove: this.onMouseMove,\n      children: /*#__PURE__*/_jsxDEV(AnimatedCursor, _objectSpread({}, this.state), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/var/www/html/blog/pages/gl.js"],"names":["React","Component","Shaders","Node","GLSL","Surface","Animated","shaders","create","cursor","frag","Cursor","render","style","x","y","props","AnimatedCursor","createAnimatedComponent","Example","ValueXY","e","rect","target","getBoundingClientRect","spring","state","toValue","clientX","left","width","bottom","clientY","height","start","onMouseMove"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,UAApC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,MAAMC,OAAO,GAAGL,OAAO,CAACM,MAAR,CAAe;AAC3BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAEN,IAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVY;AADmB,CAAf,CAAhB;;AAcA,MAAMO,MAAN,SAAqBV,SAArB,CAA+B;AAC3BW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,CAAF;AAAKC,QAAAA;AAAL;AAAT,QAAsB,KAAKC,KAAjC;AACA,wBAAO,QAAC,IAAD;AAAM,MAAA,MAAM,EAAET,OAAO,CAACE,MAAtB;AAA8B,MAAA,QAAQ,EAAE;AAAEI,QAAAA,KAAK,EAAE,CAACC,CAAD,EAAIC,CAAJ;AAAT;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAJ0B,C,CAM/B;;;AACA,MAAME,cAAc,GAAGX,QAAQ,CAACY,uBAAT,CAAiCP,MAAjC,CAAvB;AAEA,eAAe,MAAMQ,OAAN,SAAsBlB,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCACnC;AACJY,MAAAA,KAAK,EAAE,IAAIP,QAAQ,CAACc,OAAb,CAAqB;AAAEN,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAArB;AADH,KADmC;;AAAA,yCAI5BM,CAAD,IAAO;AACjB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,qBAAT,EAAb;AACAlB,MAAAA,QAAQ,CAACmB,MAAT,CAAgB,KAAKC,KAAL,CAAWb,KAA3B,EAAkC;AAC9Bc,QAAAA,OAAO,EAAE;AACLb,UAAAA,CAAC,EAAE,CAACO,CAAC,CAACO,OAAF,GAAYN,IAAI,CAACO,IAAlB,IAA0BP,IAAI,CAACQ,KAD7B;AAELf,UAAAA,CAAC,EAAE,CAACO,IAAI,CAACS,MAAL,GAAcV,CAAC,CAACW,OAAjB,IAA4BV,IAAI,CAACW;AAF/B;AADqB,OAAlC,EAKGC,KALH;AAMH,KAZ0C;AAAA;;AAa3CtB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,GAAhB;AAAqB,MAAA,MAAM,EAAE,GAA7B;AAAkC,MAAA,WAAW,EAAE,KAAKuB,WAApD;AAAA,6BACI,QAAC,cAAD,oBAAoB,KAAKT,KAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnB0C;AAoB9C","sourcesContent":["import React, { Component } from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nimport { Surface } from \"gl-react-dom\";\nimport Animated from \"animated\";\nconst shaders = Shaders.create({\n    cursor: {\n        frag: GLSL`\nprecision lowp float; varying vec2 uv; uniform vec2 style;\nvoid main() {\n  float dist = pow(1.0 - distance(style, uv), 8.0);\n  gl_FragColor = vec4(smoothstep(2.0, 0.2, distance(style, uv)) * vec3(\n    1.0 * dist + pow(1.0 - distance(style.y, uv.y), 16.0),\n    0.5 * dist + pow(1.0 - distance(style.y, uv.y), 32.0),\n    0.2 * dist + pow(1.0 - distance(style.x, uv.x), 32.0)), 1.0);\n}\n` }\n});\n\nclass Cursor extends Component {\n    render() {\n        const { style: { x, y } } = this.props;\n        return <Node shader={shaders.cursor} uniforms={{ style: [x, y] }} />;\n    }\n}\n// using \"style\" is a hack. see https://github.com/animatedjs/animated/issues/45\nconst AnimatedCursor = Animated.createAnimatedComponent(Cursor);\n\nexport default class Example extends Component {\n    state = {\n        style: new Animated.ValueXY({ x: 0.5, y: 0.5 })\n    };\n    onMouseMove = (e) => {\n        const rect = e.target.getBoundingClientRect();\n        Animated.spring(this.state.style, {\n            toValue: {\n                x: (e.clientX - rect.left) / rect.width,\n                y: (rect.bottom - e.clientY) / rect.height,\n            }\n        }).start();\n    };\n    render() {\n        return (\n            <Surface width={500} height={500} onMouseMove={this.onMouseMove}>\n                <AnimatedCursor {...this.state} />\n            </Surface>\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}