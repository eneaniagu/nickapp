{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/nico_global/pages/user/login.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n|--------------------------------------------------------------------------\n| Login View.\n|--------------------------------------------------------------------------\n|\n| The view where a user can log in. Redux is used to make the api call.\n|\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"@/store/auth/authActions\";\nimport { UserValidator } from \"@/services/UserValidator\";\nimport { Card } from \"@/components/Card/Card\";\nimport { TextInput } from \"@/components/Form/FormElement\";\nimport { H1 } from \"@/components/Typography/Headers\";\nimport { PrimaryButton } from \"@/components/Button/Button\";\nimport { Alert } from \"@/components/Alert/Alert\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { SmallSpinner } from \"@/components/Spinner/Spinner\";\n\nconst Login = props => {\n  /**\n   * The state.\n   */\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    email: \"\",\n    password: \"\",\n    emailError: \"\",\n    passwordError: \"\"\n  }); // The router object used for redirecting after login.\n\n  const router = useRouter(); // Redirect to user home route if user is authenticated.\n\n  useEffect(() => {\n    if (props.isAuthenticated && !props.loading) {\n      router.push(process.env.NEXT_PUBLIC_USER_HOME_ROUTE);\n    }\n  }, [props.isAuthenticated, props.loading]);\n  /**\n   * Handle input change.\n   *\n   * @param {object} e\n   *   The event object.\n   */\n\n  const handleInputChange = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.currentTarget.name]: e.currentTarget.value,\n      emailError: \"\",\n      passwordError: \"\"\n    }));\n  };\n  /**\n   * Submit the form.\n   */\n\n\n  const submit = () => {\n    const userValidator = new UserValidator();\n    const {\n      email,\n      password\n    } = formData; // Check for valid email address.\n\n    const isEmailValid = userValidator.validateEmail(email);\n\n    if (!isEmailValid) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        emailError: \"Please provide a valid email address\"\n      }));\n      return;\n    } // Check for valid password.\n\n\n    if (!password) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        passwordError: \"Please provide a valid password\"\n      }));\n      return;\n    } // Make API call if everything is fine.\n\n\n    props.login(email, password);\n  }; // Return statement.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute w-full md:w-3/5 lg:w-1/3 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        additionalInnerClasses: \"justify-center items-center\",\n        additionalWrapperClasses: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [props.loginError && /*#__PURE__*/_jsxDEV(Alert, {\n            type: \"danger\",\n            children: props.loginError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(H1, {\n            withMargin: true,\n            center: true,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            type: \"text\",\n            value: formData.email,\n            placeholder: \"Your email address...\",\n            onChange: e => {\n              handleInputChange(e);\n            },\n            name: \"email\",\n            errorMsg: formData.emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            type: \"password\",\n            value: formData.password,\n            placeholder: \"Your password...\",\n            onChange: e => {\n              handleInputChange(e);\n            },\n            name: \"password\",\n            errorMsg: formData.passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n            onClick: () => {\n              submit();\n            },\n            children: [/*#__PURE__*/_jsxDEV(SmallSpinner, {\n              show: props.loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), \"Login\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full flex justify-between mt-3 text-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/register\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"text-xs underline\",\n                children: \"No Account yet?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/password/forgot\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"text-xs underline\",\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}; // Map redux states to local component props.\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loginError: state.auth.loginError,\n  loading: state.auth.loginLoading\n}); // Define PropTypes.\n\n\nLogin.propTypes = {\n  props: PropTypes.object,\n  login: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/var/www/html/nico_global/pages/user/login.tsx"],"names":["React","useEffect","useState","connect","PropTypes","login","UserValidator","Card","TextInput","H1","PrimaryButton","Alert","useRouter","Link","SmallSpinner","Login","props","formData","setFormData","email","password","emailError","passwordError","router","isAuthenticated","loading","push","process","env","NEXT_PUBLIC_USER_HOME_ROUTE","handleInputChange","e","currentTarget","name","value","submit","userValidator","isEmailValid","validateEmail","loginError","mapStateToProps","state","auth","loginLoading","propTypes","object","func"],"mappings":"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","sourcesContent":["/*\n|--------------------------------------------------------------------------\n| Login View.\n|--------------------------------------------------------------------------\n|\n| The view where a user can log in. Redux is used to make the api call.\n|\n*/\n\nimport React, { ReactElement, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"@/store/auth/authActions\";\nimport { UserValidator } from \"@/services/UserValidator\";\nimport { Card } from \"@/components/Card/Card\";\nimport { TextInput } from \"@/components/Form/FormElement\";\nimport { H1 } from \"@/components/Typography/Headers\";\nimport { PrimaryButton } from \"@/components/Button/Button\";\nimport { Alert } from \"@/components/Alert/Alert\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { SmallSpinner } from \"@/components/Spinner/Spinner\";\n\nconst Login = (props: any): ReactElement => {\n    /**\n     * The state.\n     */\n    const [formData, setFormData] = useState<{\n        email: string;\n        password: string;\n        emailError: string;\n        passwordError: string;\n    }>({\n        email: \"\",\n        password: \"\",\n        emailError: \"\",\n        passwordError: \"\",\n    });\n\n    // The router object used for redirecting after login.\n    const router = useRouter();\n\n    // Redirect to user home route if user is authenticated.\n    useEffect(() => {\n        if (props.isAuthenticated && !props.loading) {\n            router.push(process.env.NEXT_PUBLIC_USER_HOME_ROUTE);\n            \n        }\n    }, [props.isAuthenticated, props.loading]);\n\n    /**\n     * Handle input change.\n     *\n     * @param {object} e\n     *   The event object.\n     */\n    const handleInputChange = (e: React.FormEvent<HTMLInputElement>): void => {\n        setFormData({\n            ...formData,\n            [e.currentTarget.name]: e.currentTarget.value,\n            emailError: \"\",\n            passwordError: \"\",\n        });\n    };\n\n    /**\n     * Submit the form.\n     */\n    const submit = (): Promise<void> => {\n        const userValidator: UserValidator = new UserValidator();\n        const { email, password } = formData;\n\n        // Check for valid email address.\n        const isEmailValid: boolean = userValidator.validateEmail(email);\n        if (!isEmailValid) {\n            setFormData({\n                ...formData,\n                emailError: \"Please provide a valid email address\",\n            });\n            return;\n        }\n\n        // Check for valid password.\n        if (!password) {\n            setFormData({\n                ...formData,\n                passwordError: \"Please provide a valid password\",\n            });\n            return;\n        }\n\n        // Make API call if everything is fine.\n        props.login(email, password);\n    };\n\n    // Return statement.\n    return (\n        <div className=\"w-screen h-screen relative\">\n            <div className=\"absolute w-full md:w-3/5 lg:w-1/3 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n                <Card\n                    additionalInnerClasses=\"justify-center items-center\"\n                    additionalWrapperClasses=\"bg-gray-100\"\n                >\n                    <>\n                        {props.loginError && (\n                            <Alert type=\"danger\">{props.loginError}</Alert>\n                        )}\n                        {/* The main Header */}\n                        <H1 withMargin={true} center={true}>\n                            Login\n                        </H1>\n\n                        {/* Email */}\n                        <TextInput\n                            type=\"text\"\n                            value={formData.email}\n                            placeholder=\"Your email address...\"\n                            onChange={(e) => {\n                                handleInputChange(e);\n                            }}\n                            name=\"email\"\n                            errorMsg={formData.emailError}\n                        />\n\n                        {/* Password */}\n                        <TextInput\n                            type=\"password\"\n                            value={formData.password}\n                            placeholder=\"Your password...\"\n                            onChange={(e) => {\n                                handleInputChange(e);\n                            }}\n                            name=\"password\"\n                            errorMsg={formData.passwordError}\n                        />\n\n                        {/* Submit Button */}\n                        <PrimaryButton\n                            onClick={() => {\n                                submit();\n                            }}\n                        >\n                            <SmallSpinner show={props.loading} />\n                            Login\n                        </PrimaryButton>\n\n                        {/* Additional links. */}\n                        <div className=\"w-full flex justify-between mt-3 text-blue-500\">\n                            <Link href=\"/user/register\">\n                                <a className=\"text-xs underline\">\n                                    No Account yet?\n                                </a>\n                            </Link>\n                            <Link href=\"/user/password/forgot\">\n                                <a className=\"text-xs underline\">\n                                    Forgot password?\n                                </a>\n                            </Link>\n                        </div>\n                    </>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\n// Map redux states to local component props.\nconst mapStateToProps = (state: any) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    loginError: state.auth.loginError,\n    loading: state.auth.loginLoading,\n});\n\n// Define PropTypes.\nLogin.propTypes = {\n    props: PropTypes.object,\n    login: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}