{"ast":null,"code":"var _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\n\nvar _jsxFileName = \"/var/www/html/blog/pages/gl.js\";\nGL; // import GL from \"gl-react\";\n// statically define your shaders\n\nconst shaders = GL.Shaders.create({\n  helloGL: {\n    frag: `\nprecision highp float;\nvarying vec2 uv;\nuniform float blue;\nvoid main () {\n  gl_FragColor = vec4(uv.x, uv.y, blue, 1.0);\n}`\n  }\n}); // create React components\n\nconst HelloGL = GL.createComponent(({\n  blue\n}) => /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(GL.Node, {\n  shader: shaders.helloGL,\n  uniforms: {\n    blue\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 9\n}, this)); //^ code written so far is \"universal\", it can be run on Web and Native (iOS/Android/desktop).\n// now using gl-react-dom WebGL implementation to render our component in a Surface (canvas).\n\nconst {\n  Surface\n} = GLReactDOM; // import GLReactDOM from \"gl-react-dom\";\n\nReactDOM.render( /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(Surface, {\n  width: 300,\n  height: 200,\n  children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(HelloGL, {\n    blue: 0.5\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/var/www/html/blog/pages/gl.js"],"names":["GL","shaders","Shaders","create","helloGL","frag","HelloGL","createComponent","blue","Surface","GLReactDOM","ReactDOM","render","document","getElementById"],"mappings":";;;AAAAA,EAAE,C,CAAC;AAEH;;AACA,MAAMC,OAAO,GAAGD,EAAE,CAACE,OAAH,CAAWC,MAAX,CAAkB;AAC9BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAG;AACf;AACA;AACA;AACA;AACA;AACA;AAPa;AADqB,CAAlB,CAAhB,C,CAYA;;AACA,MAAMC,OAAO,GAAGN,EAAE,CAACO,eAAH,CACZ,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACI,2BAAC,EAAD,CAAI,IAAJ;AACI,EAAA,MAAM,EAAEP,OAAO,CAACG,OADpB;AAEI,EAAA,QAAQ,EAAE;AAAEI,IAAAA;AAAF;AAFd;AAAA;AAAA;AAAA;AAAA,QAFQ,CAAhB,C,CAQA;AACA;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcC,UAApB,C,CAAgC;;AAChCC,QAAQ,CAACC,MAAT,eACI,2BAAC,OAAD;AAAS,EAAA,KAAK,EAAE,GAAhB;AAAqB,EAAA,MAAM,EAAE,GAA7B;AAAA,yBACI,2BAAC,OAAD;AAAS,IAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAIIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ","sourcesContent":["GL;// import GL from \"gl-react\";\n\n// statically define your shaders\nconst shaders = GL.Shaders.create({\n    helloGL: {\n        frag: `\nprecision highp float;\nvarying vec2 uv;\nuniform float blue;\nvoid main () {\n  gl_FragColor = vec4(uv.x, uv.y, blue, 1.0);\n}`\n    }\n});\n\n// create React components\nconst HelloGL = GL.createComponent(\n    ({ blue }) =>\n        <GL.Node\n            shader={shaders.helloGL}\n            uniforms={{ blue }}\n        />\n);\n\n//^ code written so far is \"universal\", it can be run on Web and Native (iOS/Android/desktop).\n// now using gl-react-dom WebGL implementation to render our component in a Surface (canvas).\nconst { Surface } = GLReactDOM; // import GLReactDOM from \"gl-react-dom\";\nReactDOM.render(\n    <Surface width={300} height={200}>\n        <HelloGL blue={0.5} />\n    </Surface>,\n    document.getElementById(\"root\"),\n);"]},"metadata":{},"sourceType":"script"}