{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/nico_global/components/Button/Button.tsx\";\n\n/*\n|--------------------------------------------------------------------------\n| Button components.\n|--------------------------------------------------------------------------\n|\n| A collection of buttons that are ready to plug and play.\n|\n*/\nimport PropTypes from \"prop-types\";\n\n/**\n * The Primary Button. Primarily used for CTAs.\n *\n * @param {object} props\n *   The props object.\n */\nexport function PrimaryButton(props) {\n  const classes = `w-full flex items-center justify-center px-8 py-2 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:text-lg md:px-3 ${props.additionalClasses}`;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: classes,\n    onClick: props.onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\nPrimaryButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.any,\n  additionalClasses: PropTypes.string\n};\n/**\n * A Swiper-Like button that can be used to indicate an on and off state.\n *\n * @param {object} props\n */\n\nexport function SwiperButton(props) {\n  const outerClasses = `toggle-checkbox flex align-center items-center inline-block rounded-2xl p-1 h-8 w-14 ${props.checked ? \"bg-purple-700 justify-end\" : \"bg-gray-300 justify-start\"} cursor-pointer transition-all duration-100 ease-in`;\n  const innerClasses = `rounded-full h-6 w-6 bg-gray-700 transition-all duration-500 ease-in`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: outerClasses,\n    onClick: props.onClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: innerClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n/**\n * A circe round button.\n * @param {object} props\n */\n\nexport function CircleButton({\n  children,\n  onClick,\n  additionalClasses\n}) {\n  const classList = `${additionalClasses} mb-3 mr-3 rounded-full p-2 bg-purple-500 text-pruple-700 focus:outline-none cursour-pointer text-white hover:bg-purple-700`;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classList,\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\nCircleButton.propTypes = {\n  children: PropTypes.element.isRequired,\n  onClick: PropTypes.func,\n  additionalClasses: PropTypes.string\n};\n/**\n * A circle round button with a burger menu inside.\n *\n * @param {object} props\n */\n\nexport function BurgerCircleButton({\n  onClick,\n  additionalClasses\n}) {\n  return /*#__PURE__*/_jsxDEV(CircleButton, {\n    onClick: onClick,\n    additionalClasses: additionalClasses,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      fill: \"none\",\n      viewBox: \"0 0 24 24\",\n      stroke: \"currentColor\",\n      className: \"w-8 h-8\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: 2,\n        d: \"M4 8h16M4 16h16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\nBurgerCircleButton.propTypes = {\n  onClick: PropTypes.func,\n  additionalClasses: PropTypes.string\n};","map":{"version":3,"sources":["/var/www/html/nico_global/components/Button/Button.tsx"],"names":["PropTypes","PrimaryButton","props","classes","additionalClasses","onClick","children","propTypes","func","any","string","SwiperButton","outerClasses","checked","innerClasses","CircleButton","classList","element","isRequired","BurgerCircleButton"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAiD;AACpD,QAAMC,OAAe,GAAI,gLAA+KD,KAAK,CAACE,iBAAkB,EAAhO;AACA,sBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAED,OAAjC;AAA0C,IAAA,OAAO,EAAED,KAAK,CAACG,OAAzD;AAAA,cACKH,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAEDL,aAAa,CAACM,SAAd,GAA0B;AACtBF,EAAAA,OAAO,EAAEL,SAAS,CAACQ,IADG;AAEtBF,EAAAA,QAAQ,EAAEN,SAAS,CAACS,GAFE;AAGtBL,EAAAA,iBAAiB,EAAEJ,SAAS,CAACU;AAHP,CAA1B;AAMA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBT,KAAtB,EAAkC;AACrC,QAAMU,YAAY,GAAI,wFAClBV,KAAK,CAACW,OAAN,GACM,2BADN,GAEM,2BACT,qDAJD;AAKA,QAAMC,YAAY,GAAI,sEAAtB;AACA,sBACI;AAAK,IAAA,SAAS,EAAEF,YAAhB;AAA8B,IAAA,OAAO,EAAEV,KAAK,CAACG,OAA7C;AAAA,2BACI;AAAK,MAAA,SAAS,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsB;AAACT,EAAAA,QAAD;AAAWD,EAAAA,OAAX;AAAoBD,EAAAA;AAApB,CAAtB,EAA8D;AACjE,QAAMY,SAAS,GAAI,GAAEZ,iBAAkB,6HAAvC;AACA,sBACI;AAAQ,IAAA,SAAS,EAAEY,SAAnB;AAA8B,IAAA,OAAO,EAAEX,OAAvC;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAEDS,YAAY,CAACR,SAAb,GAAyB;AACrBD,EAAAA,QAAQ,EAAEN,SAAS,CAACiB,OAAV,CAAkBC,UADP;AAErBb,EAAAA,OAAO,EAAEL,SAAS,CAACQ,IAFE;AAGrBJ,EAAAA,iBAAiB,EAAEJ,SAAS,CAACU;AAHR,CAAzB;AAMA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASS,kBAAT,CAA4B;AAACd,EAAAA,OAAD;AAAUD,EAAAA;AAAV,CAA5B,EAA0D;AAC7D,sBACI,QAAC,YAAD;AAAc,IAAA,OAAO,EAAEC,OAAvB;AAAgC,IAAA,iBAAiB,EAAED,iBAAnD;AAAA,2BACI;AACI,MAAA,KAAK,EAAC,4BADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,OAAO,EAAC,WAHZ;AAII,MAAA,MAAM,EAAC,cAJX;AAKI,MAAA,SAAS,EAAC,SALd;AAAA,6BAOI;AACI,QAAA,aAAa,EAAC,OADlB;AAEI,QAAA,cAAc,EAAC,OAFnB;AAGI,QAAA,WAAW,EAAE,CAHjB;AAII,QAAA,CAAC,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;AAEDe,kBAAkB,CAACZ,SAAnB,GAA+B;AAC3BF,EAAAA,OAAO,EAAEL,SAAS,CAACQ,IADQ;AAE3BJ,EAAAA,iBAAiB,EAAEJ,SAAS,CAACU;AAFF,CAA/B","sourcesContent":["/*\n|--------------------------------------------------------------------------\n| Button components.\n|--------------------------------------------------------------------------\n|\n| A collection of buttons that are ready to plug and play.\n|\n*/\n\nimport PropTypes from \"prop-types\";\nimport {ReactElement} from \"react\";\n\n/**\n * The Primary Button. Primarily used for CTAs.\n *\n * @param {object} props\n *   The props object.\n */\nexport function PrimaryButton(props: any): ReactElement {\n    const classes: string = `w-full flex items-center justify-center px-8 py-2 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:text-lg md:px-3 ${props.additionalClasses}`;\n    return (\n        <button type=\"button\" className={classes} onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nPrimaryButton.propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.any,\n    additionalClasses: PropTypes.string,\n};\n\n/**\n * A Swiper-Like button that can be used to indicate an on and off state.\n *\n * @param {object} props\n */\nexport function SwiperButton(props: any) {\n    const outerClasses = `toggle-checkbox flex align-center items-center inline-block rounded-2xl p-1 h-8 w-14 ${\n        props.checked\n            ? \"bg-purple-700 justify-end\"\n            : \"bg-gray-300 justify-start\"\n    } cursor-pointer transition-all duration-100 ease-in`;\n    const innerClasses = `rounded-full h-6 w-6 bg-gray-700 transition-all duration-500 ease-in`;\n    return (\n        <div className={outerClasses} onClick={props.onClick}>\n            <div className={innerClasses}></div>\n        </div>\n    );\n}\n\n/**\n * A circe round button.\n * @param {object} props\n */\nexport function CircleButton({children, onClick, additionalClasses}) {\n    const classList = `${additionalClasses} mb-3 mr-3 rounded-full p-2 bg-purple-500 text-pruple-700 focus:outline-none cursour-pointer text-white hover:bg-purple-700`;\n    return (\n        <button className={classList} onClick={onClick}>\n            {children}\n        </button>\n    );\n}\n\nCircleButton.propTypes = {\n    children: PropTypes.element.isRequired,\n    onClick: PropTypes.func,\n    additionalClasses: PropTypes.string,\n};\n\n/**\n * A circle round button with a burger menu inside.\n *\n * @param {object} props\n */\nexport function BurgerCircleButton({onClick, additionalClasses}) {\n    return (\n        <CircleButton onClick={onClick} additionalClasses={additionalClasses}>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                className=\"w-8 h-8\"\n            >\n                <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M4 8h16M4 16h16\"\n                />\n            </svg>\n        </CircleButton>\n    );\n}\n\nBurgerCircleButton.propTypes = {\n    onClick: PropTypes.func,\n    additionalClasses: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}