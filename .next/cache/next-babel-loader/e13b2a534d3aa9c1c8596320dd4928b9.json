{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ab/Documents/laravel-nextjs-starter-main/client/pages/user/email/verify/[userID]/[hash].tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n|--------------------------------------------------------------------------\n| Email verification view.\n|--------------------------------------------------------------------------\n|\n| The user will get the link to this view per mail. It includes userId, hash,\n| expiration data and signature in the url, which will be sent to the api upon\n| mount of the app. If the email verification was successfull, the user will be\n| redirected to the dashboard.\n|\n*/\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { verifyEmail } from \"../../../../../store/auth/authActions\";\nimport { Card } from \"./../../../../../components/Card/Card\";\nimport { H1 } from \"./../../../../../components/Typography/Headers\";\nimport { SmallSpinner } from \"./../../../../../components/Spinner/Spinner\";\n\nfunction VerifyPassword(props) {\n  _s();\n\n  var router = useRouter();\n  var _router$query = router.query,\n      expires = _router$query.expires,\n      signature = _router$query.signature,\n      userID = _router$query.userID,\n      hash = _router$query.hash; // State.\n\n  var _useState = useState({\n    error: \"\",\n    loading: true\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // Send api request to api upon mount of the component.\n\n\n  useEffect(function () {\n    var verify = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return props.verifyEmail(userID, hash, expires, signature);\n\n              case 2:\n                res = _context.sent;\n\n                if (!res.success) {\n                  _context.next = 7;\n                  break;\n                }\n\n                setState(_objectSpread(_objectSpread({}, state), {}, {\n                  loading: false,\n                  error: \"\"\n                })); // Redirect to Home route of the user after 3 seconds.\n\n                setTimeout(function () {\n                  router.push(process.env.NEXT_PUBLIC_USER_HOME_ROUTE);\n                }, 3000);\n                return _context.abrupt(\"return\");\n\n              case 7:\n                // Set error message if verification failed.\n                if (res.error) {\n                  setState(_objectSpread(_objectSpread({}, state), {}, {\n                    loading: false,\n                    error: res.error\n                  }));\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function verify() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    verify();\n  }, []);\n  /**\n   * Set the text for the H1 header depending on verification status.\n   */\n\n  var headerText = function headerText() {\n    if (state.loading) {\n      return \"We are currently validating your email address...\";\n    } else if (!state.loading && !state.error) {\n      return \"Verification successfull!\";\n    }\n\n    return \"Verification failed!\";\n  };\n\n  var header = headerText();\n  /**\n   * Set the text for the paragraph depending on verification status.\n   */\n\n  var paragraphText = function paragraphText() {\n    if (state.loading) {\n      return \"\";\n    } else if (!state.loading && !state.error) {\n      return \"Perfect! You will be redirected shortly....\";\n    }\n\n    return \"Sorry, something went wrong!\";\n  };\n\n  var paragraph = paragraphText(); // Return statement.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute w-full md:w-3/5 lg:w-1/3 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        additionalInnerClasses: \"justify-center items-center\",\n        additionalWrapperClasses: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(H1, {\n            withMargin: true,\n            center: true,\n            children: header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(SmallSpinner, {\n              show: state.loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 30\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: paragraph\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VerifyPassword, \"uzegasYQKGPXjCNLkVErDrGP73w=\", false, function () {\n  return [useRouter];\n});\n\n_c = VerifyPassword;\nexport default connect(null, {\n  verifyEmail: verifyEmail\n})(VerifyPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyPassword\");","map":{"version":3,"sources":["/home/ab/Documents/laravel-nextjs-starter-main/client/pages/user/email/verify/[userID]/[hash].tsx"],"names":["useRouter","useEffect","useState","connect","verifyEmail","Card","H1","SmallSpinner","VerifyPassword","props","router","query","expires","signature","userID","hash","error","loading","state","setState","verify","res","success","setTimeout","push","process","env","NEXT_PUBLIC_USER_HOME_ROUTE","headerText","header","paragraphText","paragraph"],"mappings":"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","sourcesContent":["/*\n|--------------------------------------------------------------------------\n| Email verification view.\n|--------------------------------------------------------------------------\n|\n| The user will get the link to this view per mail. It includes userId, hash,\n| expiration data and signature in the url, which will be sent to the api upon\n| mount of the app. If the email verification was successfull, the user will be\n| redirected to the dashboard.\n|\n*/\nimport { NextRouter, useRouter } from \"next/router\";\nimport { ReactElement, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { verifyEmail } from \"../../../../../store/auth/authActions\";\nimport { Card } from \"./../../../../../components/Card/Card\";\nimport { H1 } from \"./../../../../../components/Typography/Headers\";\nimport { SmallSpinner } from \"./../../../../../components/Spinner/Spinner\";\n\nfunction VerifyPassword(props: any): ReactElement {\n    const router: NextRouter = useRouter();\n\n    const { expires, signature, userID, hash } = router.query;\n\n    // State.\n    const [state, setState] = useState<{\n        error: string;\n        loading: boolean;\n    }>({\n        error: \"\",\n        loading: true,\n    });\n\n    // Send api request to api upon mount of the component.\n    useEffect(() => {\n        const verify = async () => {\n            const res = await props.verifyEmail(\n                userID,\n                hash,\n                expires,\n                signature\n            );\n\n            // Successfull verification.\n            if (res.success) {\n                setState({\n                    ...state,\n                    loading: false,\n                    error: \"\",\n                });\n\n                // Redirect to Home route of the user after 3 seconds.\n                setTimeout(() => {\n                    router.push(process.env.NEXT_PUBLIC_USER_HOME_ROUTE);\n                }, 3000);\n                return;\n            }\n\n            // Set error message if verification failed.\n            if (res.error) {\n                setState({\n                    ...state,\n                    loading: false,\n                    error: res.error,\n                });\n            }\n        };\n        verify();\n    }, []);\n\n    /**\n     * Set the text for the H1 header depending on verification status.\n     */\n    const headerText = (): string => {\n        if (state.loading) {\n            return \"We are currently validating your email address...\";\n        } else if (!state.loading && !state.error) {\n            return \"Verification successfull!\";\n        }\n        return \"Verification failed!\";\n    };\n    const header = headerText();\n\n    /**\n     * Set the text for the paragraph depending on verification status.\n     */\n    const paragraphText = (): string => {\n        if (state.loading) {\n            return \"\";\n        } else if (!state.loading && !state.error) {\n            return \"Perfect! You will be redirected shortly....\";\n        }\n        return \"Sorry, something went wrong!\";\n    };\n\n    const paragraph: string = paragraphText();\n\n    // Return statement.\n    return (\n        <div className=\"w-screen h-screen relative\">\n            <div className=\"absolute w-full md:w-3/5 lg:w-1/3 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n                {/* Card */}\n                <Card\n                    additionalInnerClasses=\"justify-center items-center\"\n                    additionalWrapperClasses=\"bg-gray-100\"\n                >\n                    <>\n                        {/* Header */}\n                        <H1 withMargin={true} center={true}>\n                            {header}\n                        </H1>\n\n                        {/* Paragraph */}\n                        <p>\n                            {\" \"}\n                            {<SmallSpinner show={state.loading} />}{\" \"}\n                            <span>{paragraph}</span>\n                        </p>\n                    </>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default connect(null, { verifyEmail })(VerifyPassword);\n"]},"metadata":{},"sourceType":"module"}