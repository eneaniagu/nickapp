{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n|--------------------------------------------------------------------------\n| Auth store.\n|--------------------------------------------------------------------------\n|\n| Here you can find the store for the authentication part of the application\n| It manages all authentication data like the current user, auth status and errors.\n|\n*/\nimport * as types from \"../actionTypes\"; // The initial state.\n\nconst initState = {\n  isAuthenticated: false,\n  loading: true,\n  loginLoading: false,\n  user: {},\n  loginError: \"\",\n  registerError: \"\",\n  authError: \"\",\n  userLoadedError: \"\"\n};\n/**\n * The auth store.\n *\n * @param {object} state\n *   The inital state.\n * @param {object} action\n *   The dispatched action.\n */\n\nconst auth = (state = initState, action) => {\n  switch (action.type) {\n    case types.AUTH_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        isAuthenticated: true,\n        loginError: \"\",\n        registerError: \"\"\n      });\n\n    case types.USER_LOADED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        isAuthenticated: true,\n        loginError: \"\",\n        registerError: \"\",\n        user: action.payload\n      });\n\n    case types.USER_LOADED_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        isAuthenticated: false,\n        userLoadedError: action.payload\n      });\n\n    case types.START_LOGIN_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: true\n      });\n\n    case types.LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: true,\n        loginLoading: false\n      });\n\n    case types.LOGIN_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        isAuthenticated: false,\n        user: {},\n        loginError: action.payload\n      });\n\n    case types.START_REGISTER_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        registerLoading: true\n      });\n\n    case types.REGISTER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: true,\n        registerLoading: false\n      });\n\n    case types.REGISTER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        registerLoading: false,\n        isAuthenticated: false,\n        user: {},\n        registerError: action.payload\n      });\n\n    case types.LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: false,\n        loading: false,\n        loginLoading: false,\n        user: {},\n        loginError: \"\",\n        registerError: \"\",\n        authError: \"\",\n        userLoadedError: \"\"\n      });\n\n    case types.AUTH_GENERAL_ERROR:\n    case types.RESET_PASSWORD_LINK_SENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: false,\n        loading: false,\n        loginLoading: false,\n        user: {},\n        loginError: \"\",\n        registerError: \"\",\n        authError: \"\",\n        userLoadedError: \"\"\n      });\n  }\n\n  return state;\n};\n\nexport default auth;","map":{"version":3,"sources":["/var/www/html/SourceApi/shoppingApi/client/store/auth/authReducer.tsx"],"names":["types","initState","isAuthenticated","loading","loginLoading","user","loginError","registerError","authError","userLoadedError","auth","state","action","type","AUTH_SUCCESS","USER_LOADED","payload","USER_LOADED_ERROR","START_LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_ERROR","START_REGISTER_LOADING","registerLoading","REGISTER_SUCCESS","REGISTER_ERROR","LOGOUT","AUTH_GENERAL_ERROR","RESET_PASSWORD_LINK_SENT"],"mappings":"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","sourcesContent":["/*\n|--------------------------------------------------------------------------\n| Auth store.\n|--------------------------------------------------------------------------\n|\n| Here you can find the store for the authentication part of the application\n| It manages all authentication data like the current user, auth status and errors.\n|\n*/\n\nimport * as types from \"../actionTypes\";\n\n// The initial state.\nconst initState = {\n    isAuthenticated: false,\n    loading: true,\n    loginLoading: false,\n    user: {},\n    loginError: \"\",\n    registerError: \"\",\n    authError: \"\",\n    userLoadedError: \"\",\n};\n\n/**\n * The auth store.\n *\n * @param {object} state\n *   The inital state.\n * @param {object} action\n *   The dispatched action.\n */\nconst auth = (state = initState, action: { type: string; payload: any }) => {\n    switch (action.type) {\n        case types.AUTH_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                loginError: \"\",\n                registerError: \"\",\n            };\n        case types.USER_LOADED:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                loginError: \"\",\n                registerError: \"\",\n                user: action.payload,\n            };\n        case types.USER_LOADED_ERROR:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                userLoadedError: action.payload,\n            };\n        case types.START_LOGIN_LOADING:\n            return {\n                ...state,\n                loginLoading: true,\n            };\n        case types.LOGIN_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loginLoading: false,\n            };\n        case types.LOGIN_ERROR:\n            return {\n                ...state,\n                loginLoading: false,\n                isAuthenticated: false,\n                user: {},\n                loginError: action.payload,\n            };\n        case types.START_REGISTER_LOADING:\n            return {\n                ...state,\n                registerLoading: true,\n            };\n        case types.REGISTER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                registerLoading: false,\n            };\n        case types.REGISTER_ERROR:\n            return {\n                ...state,\n                registerLoading: false,\n                isAuthenticated: false,\n                user: {},\n                registerError: action.payload,\n            };\n        case types.LOGOUT:\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: false,\n                loginLoading: false,\n                user: {},\n                loginError: \"\",\n                registerError: \"\",\n                authError: \"\",\n                userLoadedError: \"\",\n            };\n        case types.AUTH_GENERAL_ERROR:\n        case types.RESET_PASSWORD_LINK_SENT:\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: false,\n                loginLoading: false,\n                user: {},\n                loginError: \"\",\n                registerError: \"\",\n                authError: \"\",\n                userLoadedError: \"\",\n            };\n    }\n    return state;\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}