{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/blog/pages/gl.js\",\n    _this = this;\n\nimport GL from \"gl-react\"; // statically define your shaders\n\nvar shaders = GL.Shaders.create({\n  helloGL: {\n    frag: \"\\nprecision highp float;\\nvarying vec2 uv;\\nuniform float blue;\\nvoid main () {\\n  gl_FragColor = vec4(uv.x, uv.y, blue, 1.0);\\n}\"\n  }\n}); // create React components\n\nvar HelloGL = GL.createComponent(_c = function _c(_ref) {\n  var blue = _ref.blue;\n  return /*#__PURE__*/_jsxDEV(GL.Node, {\n    shader: shaders.helloGL,\n    uniforms: {\n      blue: blue\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, _this);\n}); //^ code written so far is \"universal\", it can be run on Web and Native (iOS/Android/desktop).\n// now using gl-react-dom WebGL implementation to render our component in a Surface (canvas).\n\n_c2 = HelloGL;\nvar _GLReactDOM = GLReactDOM,\n    Surface = _GLReactDOM.Surface; // import GLReactDOM from \"gl-react-dom\";\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Surface, {\n  width: 300,\n  height: 200,\n  children: /*#__PURE__*/_jsxDEV(HelloGL, {\n    blue: 0.5\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HelloGL$GL.createComponent\");\n$RefreshReg$(_c2, \"HelloGL\");","map":{"version":3,"sources":["/var/www/html/blog/pages/gl.js"],"names":["GL","shaders","Shaders","create","helloGL","frag","HelloGL","createComponent","blue","GLReactDOM","Surface","ReactDOM","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,EAAP,MAAe,UAAf,C,CAEA;;AACA,IAAMC,OAAO,GAAGD,EAAE,CAACE,OAAH,CAAWC,MAAX,CAAkB;AAC9BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI;AADC;AADqB,CAAlB,CAAhB,C,CAYA;;AACA,IAAMC,OAAO,GAAGN,EAAE,CAACO,eAAH,MACZ;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,sBACI,QAAC,EAAD,CAAI,IAAJ;AACI,IAAA,MAAM,EAAEP,OAAO,CAACG,OADpB;AAEI,IAAA,QAAQ,EAAE;AAAEI,MAAAA,IAAI,EAAJA;AAAF;AAFd;AAAA;AAAA;AAAA;AAAA,WADJ;AAAA,CADY,CAAhB,C,CAQA;AACA;;MATMF,O;kBAUcG,U;IAAZC,O,eAAAA,O,EAAwB;;AAChCC,QAAQ,CAACC,MAAT,eACI,QAAC,OAAD;AAAS,EAAA,KAAK,EAAE,GAAhB;AAAqB,EAAA,MAAM,EAAE,GAA7B;AAAA,yBACI,QAAC,OAAD;AAAS,IAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAIIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ","sourcesContent":["import GL from \"gl-react\";\n\n// statically define your shaders\nconst shaders = GL.Shaders.create({\n    helloGL: {\n        frag: `\nprecision highp float;\nvarying vec2 uv;\nuniform float blue;\nvoid main () {\n  gl_FragColor = vec4(uv.x, uv.y, blue, 1.0);\n}`\n    }\n});\n\n// create React components\nconst HelloGL = GL.createComponent(\n    ({ blue }) =>\n        <GL.Node\n            shader={shaders.helloGL}\n            uniforms={{ blue }}\n        />\n);\n\n//^ code written so far is \"universal\", it can be run on Web and Native (iOS/Android/desktop).\n// now using gl-react-dom WebGL implementation to render our component in a Surface (canvas).\nconst { Surface } = GLReactDOM; // import GLReactDOM from \"gl-react-dom\";\nReactDOM.render(\n    <Surface width={300} height={200}>\n        <HelloGL blue={0.5} />\n    </Surface>,\n    document.getElementById(\"root\"),\n);"]},"metadata":{},"sourceType":"module"}