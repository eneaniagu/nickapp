{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { request } from 'http';\nimport * as type from '../actionTypes';\nexport var addproduct = function addproduct(Items) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: type.ADD_PRODUCT\n              }); // Api call\n\n              _context.next = 4;\n              return axios.get(\"/sanctum/csrf-cookie\");\n\n            case 4:\n              _context.next = 6;\n              return axios.post('/addproduct', {\n                Items: Items\n              });\n\n            case 6:\n              res = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0) {\n                console.log(_context.t0);\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/ab/Documents/laravel-nextjs-starter-main/client/store/Tanent/action.js"],"names":["axios","request","type","addproduct","Items","dispatch","ADD_PRODUCT","get","post","res","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,IAAZ,MAAwB,gBAAxB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAU;AAChC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECA,cAAAA,QAAQ,CAAC;AACLH,gBAAAA,IAAI,EAAEA,IAAI,CAACI;AADN,eAAD,CAAR,CAFD,CAKC;;AALD;AAAA,qBAMQN,KAAK,CAACO,GAAN,CAAU,sBAAV,CANR;;AAAA;AAAA;AAAA,qBAOmBP,KAAK,CAACQ,IAAN,CAAW,aAAX,EAAyB;AAACJ,gBAAAA,KAAK,EAALA;AAAD,eAAzB,CAPnB;;AAAA;AAOOK,cAAAA,GAPP;AAAA;AAAA;;AAAA;AAAA;AAAA;;AASC,+BAAS;AACLC,gBAAAA,OAAO,CAACC,GAAR;AACH;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiBH,CAlBM","sourcesContent":["import axios from 'axios'\nimport { request } from 'http'\nimport * as type  from  '../actionTypes'\n\n\nexport const addproduct = (Items) =>{\n    return async (dispatch) => {\n        try{\n            dispatch({\n                type: type.ADD_PRODUCT\n            })\n            // Api call\n             await axios.get(\"/sanctum/csrf-cookie\")\n            const res = await axios.post('/addproduct',{Items})\n        } catch(error){\n            if(error){\n                console.log(error)\n            }\n\n        }\n\n    }   \n    \n}"]},"metadata":{},"sourceType":"module"}